name: VALIDATE

on:
  - push
  - pull_request

jobs:
  debug-build:
    strategy:
      matrix:
        CONTAINER: [ 'gcc-14', 'clang-18' ]

    runs-on: ubuntu-latest
    container: xzzx/devel:${{ matrix.CONTAINER }}
    steps:
      - name: versions
        run: |
          cat /etc/os-release
          echo $PATH
          git --version
          cmake --version
          $CC --version
          $CXX --version

      - uses: actions/checkout@v4
        with:
          path: 'mrmd'

      - name: Configure
        run: |
          cmake \
            -S mrmd \
            -B mrmd-build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DMRMD_ENABLE_HDF5=ON \
            -DMRMD_ENABLE_MPI=ON \
            -DMRMD_ENABLE_PYTHON=ON \
            -DMRMD_VERBOSE_ASSERTS=ON \
            -DMRMD_WERROR=ON \
            -DKokkos_ENABLE_DEBUG=ON \
            -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON \
            -DKokkos_ENABLE_DEBUG_DUALVIEW_MODIFY_CHECK=ON \
            -DKokkos_ENABLE_HWLOC=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DKokkos_ENABLE_OPENMP=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: build dependencies
        run: cmake --build mrmd-build --target fmt gmock gmock_main gtest gtest_main kokkoscontainers kokkoscore kokkossimd yaml-cpp yaml-cpp-parse yaml-cpp-read yaml-cpp-sandbox --parallel 2

      - name: build
        run: cmake --build mrmd-build --target all --parallel 2

      - name: Test
        working-directory: mrmd-build
        run: ctest --output-on-failure --parallel 2

  release-build:
    strategy:
      matrix:
        CONTAINER: [ 'gcc-14', 'clang-18' ]

    runs-on: ubuntu-latest
    container: xzzx/devel:${{ matrix.CONTAINER }}
    steps:
      - name: versions
        run: |
          cat /etc/os-release
          echo $PATH
          git --version
          cmake --version
          $CC --version
          $CXX --version

      - uses: actions/checkout@v4
        with:
          path: 'mrmd'

      - name: Configure
        run: |
          cmake \
            -S mrmd \
            -B mrmd-build \
            -DCMAKE_BUILD_TYPE=Release \
            -DMRMD_ENABLE_HDF5=ON \
            -DMRMD_ENABLE_MPI=ON \
            -DMRMD_ENABLE_PYTHON=ON \
            -DMRMD_VERBOSE_ASSERTS=ON \
            -DMRMD_WERROR=ON \
            -DKokkos_ENABLE_HWLOC=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DKokkos_ENABLE_OPENMP=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: build dependencies
        run: cmake --build mrmd-build --target fmt gmock gmock_main gtest gtest_main kokkoscontainers kokkoscore kokkossimd yaml-cpp yaml-cpp-parse yaml-cpp-read yaml-cpp-sandbox --parallel 2

      - name: build
        run: cmake --build mrmd-build --target all --parallel 2

      - name: Test
        working-directory: mrmd-build
        run: ctest --output-on-failure --parallel 2

  minimal-build:
    runs-on: ubuntu-latest
    container: xzzx/devel:ubuntu-minimal
    steps:
      - name: versions
        run: |
          cat /etc/os-release
          echo $PATH
          git --version
          cmake --version

      - uses: actions/checkout@v4
        with:
          path: 'mrmd'

      - name: Configure
        run: |
          cmake \
            -S mrmd \
            -B mrmd-build \
            -DCMAKE_BUILD_TYPE=Release \
            -DMRMD_VERBOSE_ASSERTS=ON \
            -DMRMD_WERROR=ON \
            -DKokkos_ENABLE_HWLOC=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DKokkos_ENABLE_OPENMP=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: build dependencies
        run: cmake --build mrmd-build --target fmt gmock gmock_main gtest gtest_main kokkoscontainers kokkoscore kokkossimd yaml-cpp yaml-cpp-parse yaml-cpp-read yaml-cpp-sandbox --parallel 2

      - name: build
        run: cmake --build mrmd-build --target all --parallel 2

      - name: Test
        working-directory: mrmd-build
        run: ctest --output-on-failure --parallel 2

  nvcc-debug-build:
    strategy:
      matrix:
        CONTAINER: [ 'nvcc-12.6' ]

    runs-on: ubuntu-latest
    container: xzzx/devel:${{ matrix.CONTAINER }}
    steps:
      - name: versions
        run: |
          cat /etc/os-release
          echo $PATH
          git --version
          cmake --version
          $CC --version
          $CXX --version

      - uses: actions/checkout@v4
        with:
          path: 'mrmd'

      - name: Configure
        run: |
          cmake \
            -S mrmd \
            -B mrmd-build \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_CXX_COMPILER=g++ \
            -DCMAKE_BUILD_TYPE=Debug \
            -DMRMD_VERBOSE_ASSERTS=ON \
            -DMRMD_WERROR=ON \
            -DKokkos_ENABLE_DEBUG=ON \
            -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON \
            -DKokkos_ENABLE_DEBUG_DUALVIEW_MODIFY_CHECK=ON \
            -DKokkos_ENABLE_HWLOC=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DKokkos_ENABLE_OPENMP=ON \
            -DKokkos_ENABLE_CUDA=ON \
            -DKokkos_ARCH_AMPERE80=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: build dependencies
        run: cmake --build mrmd-build --target fmt gmock gmock_main gtest gtest_main kokkoscontainers kokkoscore kokkossimd yaml-cpp yaml-cpp-parse yaml-cpp-read yaml-cpp-sandbox --parallel 2

      - name: build
        run: cmake --build mrmd-build --target all --parallel 2

  hipcc-debug-build:
    strategy:
      matrix:
        CONTAINER: [ 'hipcc-7.0.2' ]

    runs-on: ubuntu-latest
    container: xzzx/devel:${{ matrix.CONTAINER }}
    steps:
      - name: versions
        run: |
          cat /etc/os-release
          echo $PATH
          git --version
          cmake --version
          $CC --version
          $CXX --version

      - uses: actions/checkout@v4
        with:
          path: 'mrmd'

      - name: Configure
        run: |
          cmake \
            -S mrmd \
            -B mrmd-build \
            -DCMAKE_C_COMPILER=hipcc \
            -DCMAKE_CXX_COMPILER=hipcc \
            -DCMAKE_BUILD_TYPE=Debug \
            -DMRMD_VERBOSE_ASSERTS=ON \
            -DMRMD_WERROR=ON \
            -DKokkos_ENABLE_DEBUG=ON \
            -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON \
            -DKokkos_ENABLE_DEBUG_DUALVIEW_MODIFY_CHECK=ON \
            -DKokkos_ENABLE_HWLOC=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DKokkos_ENABLE_OPENMP=ON \
            -DKokkos_ENABLE_HIP=ON \
            -DKokkos_ENABLE_ROCM=ON \
            -DKokkos_ARCH_AMD_GFX942_APU=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: build dependencies
        run: cmake --build mrmd-build --target fmt gmock gmock_main gtest gtest_main kokkoscontainers kokkoscore kokkossimd yaml-cpp yaml-cpp-parse yaml-cpp-read yaml-cpp-sandbox --parallel 2

      - name: build
        run: cmake --build mrmd-build --target all --parallel 2

  clang-tidy:
    runs-on: ubuntu-latest
    container: xzzx/devel:clang-18
    steps:
      - name: versions
        run: |
          cat /etc/os-release
          echo $PATH
          git --version
          cmake --version
          $CC --version
          $CXX --version

      - uses: actions/checkout@v4
        with:
          path: 'source'

      - name: Configure
        run: |
          cmake \
            -S source \
            -B build \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DCMAKE_BUILD_TYPE=Debug \
            -DMRMD_ENABLE_HDF5=ON \
            -DMRMD_ENABLE_MPI=ON \
            -DMRMD_ENABLE_PYTHON=ON \
            -DMRMD_VERBOSE_ASSERTS=ON \
            -DMRMD_WERROR=ON \
            -DKokkos_ENABLE_DEBUG=ON \
            -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON \
            -DKokkos_ENABLE_DEBUG_DUALVIEW_MODIFY_CHECK=ON \
            -DKokkos_ENABLE_HWLOC=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: run clang-tidy
        working-directory: ./source
        run: run-clang-tidy-18 -p ../build -header-filter 'source' -j 2 '^(?!.*_deps).*$' 

  clang-format:
    runs-on: ubuntu-latest
    container: xzzx/devel:clang-18
    steps:
      - uses: actions/checkout@v4

      - name: run formatter
        run: |
          git config --global --add safe.directory /__w/mrmd/mrmd
          ./format.sh

      - name: check formatting
        run: git diff --exit-code

  black-format:
    runs-on: ubuntu-latest
    container: xzzx/devel:clang-18
    steps:
      - uses: actions/checkout@v4

      - name: run formatter
        run: |
          git config --global --add safe.directory /__w/mrmd/mrmd
          black .

      - name: check formatting
        run: git diff --exit-code

  pylint:
    runs-on: ubuntu-latest
    container: xzzx/devel:clang-18
    steps:
      - uses: actions/checkout@v4
        with:
          path: 'mrmd'

      - name: Configure
        run: |
          cmake \
            -S mrmd \
            -B mrmd-build \
            -DCMAKE_BUILD_TYPE=Release \
            -DMRMD_ENABLE_HDF5=ON \
            -DMRMD_ENABLE_MPI=ON \
            -DMRMD_ENABLE_PYTHON=ON \
            -DMRMD_VERBOSE_ASSERTS=ON \
            -DMRMD_WERROR=ON \
            -DKokkos_ENABLE_HWLOC=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DKokkos_ENABLE_OPENMP=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON

      - name: build
        run: cmake --build mrmd-build --target all --parallel 2

      - name: run pylint
        run: |
          git config --global --add safe.directory /__w/mrmd/mrmd
          export PYTHONPATH=$(pwd)/mrmd-build/pyMRMD
          pylint -v --ignore=build --disable=R,C,I1101 mrmd
